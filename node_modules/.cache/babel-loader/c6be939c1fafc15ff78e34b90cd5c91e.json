{"ast":null,"code":"import _slicedToArray from \"C:\\\\Programaci\\xF3nC\\\\movies\\\\2. React RMDB - Start Here\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Programaci\\xF3nC\\\\movies\\\\2. React RMDB - Start Here\\\\src\\\\components\\\\Home.js\";\nimport React, { useState } from 'react';\nimport { API_URL, API_KEY, POSTER_SIZE, BACKDROP_SIZE, IMAGE_BASE_URL } from '../config'; // import Components\n\nimport HeroImage from './elements/HeroImage';\nimport SearchBar from './elements/SearchBar';\nimport Grid from './elements/Grid';\nimport MovieThumb from './elements/MovieThumb';\nimport LoadMoreBtn from './elements/LoadMoreBtn';\nimport Spinner from './elements/Spinner'; // Custom Hook\n\nimport { useHomeFetch } from './hooks/useHomeFetch';\nimport NoImage from './images/no_image.jpg';\n\nconst Home = () => {\n  const _useHomeFetch = useHomeFetch(),\n        _useHomeFetch2 = _slicedToArray(_useHomeFetch, 2),\n        _useHomeFetch2$ = _useHomeFetch2[0],\n        _useHomeFetch2$$state = _useHomeFetch2$.state,\n        movies = _useHomeFetch2$$state.movies,\n        currentPage = _useHomeFetch2$$state.currentPage,\n        totalPages = _useHomeFetch2$$state.totalPages,\n        heroImage = _useHomeFetch2$$state.heroImage,\n        loading = _useHomeFetch2$.loading,\n        error = _useHomeFetch2$.error,\n        fetchMovies = _useHomeFetch2[1];\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        searchTerm = _useState2[0],\n        setSearchTerm = _useState2[1];\n\n  const loadMoreMovies = () => {\n    const searchEndpoint = \"\".concat(API_URL, \"search/movie?api_key=\").concat(API_KEY, \"&query=\").concat(searchTerm, \"&page=\").concat(currentPage + 1);\n    const popularEndpoint = \"\".concat(API_URL, \"movie/popular?api_key=\").concat(API_KEY, \"&page=\").concat(currentPage + 1);\n    const endpoint = searchTerm ? searchEndpoint : popularEndpoint;\n    fetchMovies(endpoint);\n  };\n\n  if (error) return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Something went wrong ...\");\n  if (!movies[0]) return React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  });\n  return React.createElement(React.Fragment, null, React.createElement(HeroImage, {\n    image: \"\".concat(IMAGE_BASE_URL).concat(BACKDROP_SIZE).concat(heroImage.backdrop_path),\n    title: heroImage.original_title,\n    text: heroImage.overview,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(SearchBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    header: searchTerm ? 'Search Result' : 'Popular Movies',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, movies.map(movie => React.createElement(MovieThumb, {\n    key: movie.id,\n    clickable: true,\n    image: movie.poster_path ? \"\".concat(IMAGE_BASE_URL).concat(POSTER_SIZE).concat(movie.poster_path) : NoImage,\n    movieId: movie.id,\n    movieName: movie.original_title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }))), loading && React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), React.createElement(LoadMoreBtn, {\n    text: \"Load More\",\n    callback: loadMoreMovies,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }));\n};\n\nexport default Home;","map":{"version":3,"sources":["C:\\ProgramaciÃ³nC\\movies\\2. React RMDB - Start Here\\src\\components\\Home.js"],"names":["React","useState","API_URL","API_KEY","POSTER_SIZE","BACKDROP_SIZE","IMAGE_BASE_URL","HeroImage","SearchBar","Grid","MovieThumb","LoadMoreBtn","Spinner","useHomeFetch","NoImage","Home","state","movies","currentPage","totalPages","heroImage","loading","error","fetchMovies","searchTerm","setSearchTerm","loadMoreMovies","searchEndpoint","popularEndpoint","endpoint","backdrop_path","original_title","overview","map","movie","id","poster_path"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  API_URL,\r\n  API_KEY,\r\n  POSTER_SIZE,\r\n  BACKDROP_SIZE,\r\n  IMAGE_BASE_URL,\r\n} from '../config';\r\n\r\n// import Components\r\nimport HeroImage from './elements/HeroImage';\r\nimport SearchBar from './elements/SearchBar';\r\nimport Grid from './elements/Grid';\r\nimport MovieThumb from './elements/MovieThumb';\r\nimport LoadMoreBtn from './elements/LoadMoreBtn';\r\nimport Spinner from './elements/Spinner';\r\n\r\n// Custom Hook\r\nimport { useHomeFetch } from './hooks/useHomeFetch';\r\n\r\nimport NoImage from './images/no_image.jpg';\r\n\r\nconst Home = () => {\r\n  const [\r\n    {\r\n      state: { movies, currentPage, totalPages, heroImage },\r\n      loading,\r\n      error,\r\n    },\r\n    fetchMovies,\r\n  ] = useHomeFetch();\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  const loadMoreMovies = () => {\r\n    const searchEndpoint = `${API_URL}search/movie?api_key=${API_KEY}&query=${searchTerm}&page=${currentPage + 1}`;\r\n    const popularEndpoint = `${API_URL}movie/popular?api_key=${API_KEY}&page=${currentPage + 1}`;\r\n\r\n    const endpoint = searchTerm ? searchEndpoint : popularEndpoint;\r\n\r\n    fetchMovies(endpoint);\r\n\r\n  }\r\n\r\n  if (error) return <div>Something went wrong ...</div>;\r\n  if (!movies[0]) return <Spinner />;\r\n\r\n  return (\r\n    <>\r\n      <HeroImage\r\n        image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${heroImage.backdrop_path}`}\r\n        title={heroImage.original_title}\r\n        text={heroImage.overview}\r\n      />\r\n      <SearchBar />\r\n      <Grid header={searchTerm ? 'Search Result' : 'Popular Movies'}>\r\n        {movies.map(movie => (\r\n          <MovieThumb\r\n            key={movie.id}\r\n            clickable\r\n            image={\r\n              movie.poster_path\r\n                ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\r\n                : NoImage\r\n            }\r\n            movieId={movie.id}\r\n            movieName={movie.original_title}\r\n          />\r\n        ))}\r\n      </Grid>\r\n      {loading && <Spinner />}\r\n      <LoadMoreBtn text=\"Load More\" callback={loadMoreMovies} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}