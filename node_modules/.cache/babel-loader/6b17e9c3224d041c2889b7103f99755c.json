{"ast":null,"code":"import _slicedToArray from \"C:\\\\Programaci\\xF3nC\\\\movies\\\\2. React RMDB - Start Here\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Programaci\\xF3nC\\\\movies\\\\2. React RMDB - Start Here\\\\src\\\\components\\\\Home.js\";\n// Custom Hook\nimport { useHomeFetch } from './hooks/useHomeFetch';\nimport NoImage from './images/no_image.jpg';\n\nconst Home = () => {\n  const _useHomeFetch = useHomeFetch(),\n        _useHomeFetch2 = _slicedToArray(_useHomeFetch, 2),\n        _useHomeFetch2$ = _useHomeFetch2[0],\n        _useHomeFetch2$$state = _useHomeFetch2$.state,\n        movies = _useHomeFetch2$$state.movies,\n        currentPage = _useHomeFetch2$$state.currentPage,\n        totalPages = _useHomeFetch2$$state.totalPages,\n        heroImage = _useHomeFetch2$$state.heroImage,\n        loading = _useHomeFetch2$.loading,\n        error = _useHomeFetch2$.error,\n        fetchMovies = _useHomeFetch2[1];\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        searchTerm = _useState2[0],\n        setSearchTerm = _useState2[1];\n\n  const searchMovies = search => {\n    const endpoint = search ? SEARCH_BASE_URL + search : POPULAR_BASE_URL;\n    setSearchTerm(search);\n    fetchMovies(endpoint);\n  };\n\n  const loadMoreMovies = () => {\n    const searchEndpoint = \"\".concat(SEARCH_BASE_URL).concat(searchTerm, \"&page=\").concat(currentPage + 1);\n    const popularEndpoint = \"\".concat(POPULAR_BASE_URL, \"&page=\").concat(currentPage + 1);\n    const endpoint = searchTerm ? searchEndpoint : popularEndpoint;\n    fetchMovies(endpoint);\n  };\n\n  if (error) return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Something went wrong ...\");\n  if (!movies[0]) return React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  });\n  return React.createElement(React.Fragment, null, !searchTerm && React.createElement(HeroImage, {\n    image: \"\".concat(IMAGE_BASE_URL).concat(BACKDROP_SIZE).concat(heroImage.backdrop_path),\n    title: heroImage.original_title,\n    text: heroImage.overview,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(SearchBar, {\n    callback: searchMovies,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    header: searchTerm ? 'Search Result' : 'Popular Movies',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, movies.map(movie => React.createElement(MovieThumb, {\n    key: movie.id,\n    clickable: true,\n    image: movie.poster_path ? IMAGE_BASE_URL + POSTER_SIZE + movie.poster_path : NoImage,\n    movieId: movie.id,\n    movieName: movie.original_title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }))), loading && React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), currentPage < totalPages && !loading && React.createElement(LoadMoreBtn, {\n    text: \"Load More\",\n    callback: loadMoreMovies,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }));\n};\n\nexport default Home;","map":{"version":3,"sources":["C:\\ProgramaciÃ³nC\\movies\\2. React RMDB - Start Here\\src\\components\\Home.js"],"names":["useHomeFetch","NoImage","Home","state","movies","currentPage","totalPages","heroImage","loading","error","fetchMovies","useState","searchTerm","setSearchTerm","searchMovies","search","endpoint","SEARCH_BASE_URL","POPULAR_BASE_URL","loadMoreMovies","searchEndpoint","popularEndpoint","IMAGE_BASE_URL","BACKDROP_SIZE","backdrop_path","original_title","overview","map","movie","id","poster_path","POSTER_SIZE"],"mappings":";;AAAA;AACA,SAASA,YAAT,QAA6B,sBAA7B;AAEA,OAAOC,OAAP,MAAoB,uBAApB;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA,wBAQbF,YAAY,EARC;AAAA;AAAA;AAAA,gDAGbG,KAHa;AAAA,QAGJC,MAHI,yBAGJA,MAHI;AAAA,QAGIC,WAHJ,yBAGIA,WAHJ;AAAA,QAGiBC,UAHjB,yBAGiBA,UAHjB;AAAA,QAG6BC,SAH7B,yBAG6BA,SAH7B;AAAA,QAIbC,OAJa,mBAIbA,OAJa;AAAA,QAKbC,KALa,mBAKbA,KALa;AAAA,QAOfC,WAPe;;AAAA,oBASmBC,QAAQ,CAAC,EAAD,CAT3B;AAAA;AAAA,QASVC,UATU;AAAA,QASEC,aATF;;AAWjB,QAAMC,YAAY,GAAGC,MAAM,IAAI;AAC7B,UAAMC,QAAQ,GAAGD,MAAM,GAAGE,eAAe,GAAGF,MAArB,GAA8BG,gBAArD;AAEAL,IAAAA,aAAa,CAACE,MAAD,CAAb;AACAL,IAAAA,WAAW,CAACM,QAAD,CAAX;AAED,GAND;;AAQA,QAAMG,cAAc,GAAG,MAAM;AAC3B,UAAMC,cAAc,aAAMH,eAAN,SAAwBL,UAAxB,mBAA2CP,WAAW,GAAG,CAAzD,CAApB;AACA,UAAMgB,eAAe,aAAMH,gBAAN,mBAA+Bb,WAAW,GAAG,CAA7C,CAArB;AAEA,UAAMW,QAAQ,GAAGJ,UAAU,GAAGQ,cAAH,GAAoBC,eAA/C;AAEAX,IAAAA,WAAW,CAACM,QAAD,CAAX;AAED,GARD;;AAUA,MAAIP,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAP;AACX,MAAI,CAACL,MAAM,CAAC,CAAD,CAAX,EAAgB,OAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAEhB,SACE,0CACG,CAACQ,UAAD,IACC,oBAAC,SAAD;AACE,IAAA,KAAK,YAAKU,cAAL,SAAsBC,aAAtB,SAAsChB,SAAS,CAACiB,aAAhD,CADP;AAEE,IAAA,KAAK,EAAEjB,SAAS,CAACkB,cAFnB;AAGE,IAAA,IAAI,EAAElB,SAAS,CAACmB,QAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAQE,oBAAC,SAAD;AAAW,IAAA,QAAQ,EAAEZ,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EASE,oBAAC,IAAD;AAAM,IAAA,MAAM,EAAEF,UAAU,GAAG,eAAH,GAAqB,gBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,MAAM,CAACuB,GAAP,CAAWC,KAAK,IACf,oBAAC,UAAD;AACE,IAAA,GAAG,EAAEA,KAAK,CAACC,EADb;AAEE,IAAA,SAAS,MAFX;AAGE,IAAA,KAAK,EACHD,KAAK,CAACE,WAAN,GACIR,cAAc,GAAGS,WAAjB,GAA+BH,KAAK,CAACE,WADzC,GAEI7B,OANR;AAQE,IAAA,OAAO,EAAE2B,KAAK,CAACC,EARjB;AASE,IAAA,SAAS,EAAED,KAAK,CAACH,cATnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CATF,EAwBGjB,OAAO,IAAI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxBd,EAyBGH,WAAW,GAAGC,UAAd,IAA4B,CAACE,OAA7B,IACC,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAC,WAAlB;AAA8B,IAAA,QAAQ,EAAEW,cAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1BJ,CADF;AA+BD,CA/DD;;AAiEA,eAAejB,IAAf","sourcesContent":["// Custom Hook\r\nimport { useHomeFetch } from './hooks/useHomeFetch';\r\n\r\nimport NoImage from './images/no_image.jpg';\r\n\r\nconst Home = () => {\r\n  const [\r\n    {\r\n      state: { movies, currentPage, totalPages, heroImage },\r\n      loading,\r\n      error,\r\n    },\r\n    fetchMovies,\r\n  ] = useHomeFetch();\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  const searchMovies = search => {\r\n    const endpoint = search ? SEARCH_BASE_URL + search : POPULAR_BASE_URL;\r\n\r\n    setSearchTerm(search);\r\n    fetchMovies(endpoint);\r\n\r\n  }\r\n\r\n  const loadMoreMovies = () => {\r\n    const searchEndpoint = `${SEARCH_BASE_URL}${searchTerm}&page=${currentPage + 1}`;\r\n    const popularEndpoint = `${POPULAR_BASE_URL}&page=${currentPage + 1}`;\r\n\r\n    const endpoint = searchTerm ? searchEndpoint : popularEndpoint;\r\n\r\n    fetchMovies(endpoint);\r\n\r\n  }\r\n\r\n  if (error) return <div>Something went wrong ...</div>;\r\n  if (!movies[0]) return <Spinner />;\r\n\r\n  return (\r\n    <>\r\n      {!searchTerm && (\r\n        <HeroImage\r\n          image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${heroImage.backdrop_path}`}\r\n          title={heroImage.original_title}\r\n          text={heroImage.overview}\r\n        />\r\n      )}\r\n      <SearchBar callback={searchMovies} />\r\n      <Grid header={searchTerm ? 'Search Result' : 'Popular Movies'}>\r\n        {movies.map(movie => (\r\n          <MovieThumb\r\n            key={movie.id}\r\n            clickable\r\n            image={\r\n              movie.poster_path\r\n                ? IMAGE_BASE_URL + POSTER_SIZE + movie.poster_path\r\n                : NoImage\r\n            }\r\n            movieId={movie.id}\r\n            movieName={movie.original_title}\r\n          />\r\n        ))}\r\n      </Grid>\r\n      {loading && <Spinner />}\r\n      {currentPage < totalPages && !loading && (\r\n        <LoadMoreBtn text=\"Load More\" callback={loadMoreMovies} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}